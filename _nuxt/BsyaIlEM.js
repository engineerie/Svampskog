import{_ as Oe,u as D,a as he,r as X,o as He,b as qe,c as Ue,d as L,e as N,f as O,g as te,n as Ve,F as De,h as v,w as ie,T as ne,t as Fe,i as se,j as Z,k as fe,l as Be,m as re,p as ye,q as ze,s as We,v as Ye,x as Ke,y as be}from"#entry";import{loadDatabaseAdapter as P}from"./BXs-mjye.js";import{h as Qe}from"./CTQwvuzN.js";const Ge={key:0},Ze={key:0},Je={id:"__preview_loader"},et={__name:"ContentPreviewMode",props:{previewToken:{type:String,required:!0},api:{type:String,required:!0},initializePreview:{type:Function,required:!0}},setup(i){const e=i,t=["__nuxt_preview","__preview_enabled"],n=D(),r=he(),s=X(!0),o=X(!1),a=X(!1),p=X("");let l;const c=async()=>{se("previewToken").value="",window.sessionStorage.removeItem("previewToken"),window.sessionStorage.removeItem("previewAPI"),await r.replace({query:{preview:void 0}}),window.location.reload()},h=async u=>{await e.initializePreview(u),se("previewToken").value&&(a.value=!0,await r.replace({query:{}}),n.callHook("nuxt-content:preview:ready"),window.parent&&window.self!==window.parent&&l.disconnect())};return He(async()=>{l=(await qe(()=>import("./j843apyr.js"),[],import.meta.url)).connect(`${e.api}/preview`,{transports:["websocket","polling"],auth:{token:e.previewToken}});let d;l.on("connect",()=>{d=setTimeout(()=>{a.value||(d=setTimeout(()=>{p.value="Preview sync timed out",a.value=!1},3e4),l.emit("draft:requestSync"))},3e4)});const m=()=>{d&&(clearTimeout(d),d=null)};l.on("draft:sync",async g=>{if(m(),!g){try{l.once("draft:ready",()=>{l.emit("draft:requestSync")}),await $fetch("api/projects/preview/sync",{baseURL:e.api,method:"POST",params:{token:e.previewToken}})}catch(f){switch(m(),f.response.status){case 404:p.value="Preview draft not found",a.value=!1;break;default:p.value="An error occurred while syncing preview",a.value=!1}}return}h(g)}),l.on("draft:unauthorized",()=>{m(),p.value="Unauthorized preview",a.value=!1}),l.on("disconnect",()=>{m()}),document.body.classList.add(...t)}),Ue(()=>{document.body.classList.remove(...t)}),(u,d)=>(N(),L("div",null,[s.value?(N(),L("div",{key:0,id:"__nuxt_preview",class:Ve({__preview_ready:a.value,__preview_refreshing:o.value})},[a.value?(N(),L(De,{key:0},[d[0]||(d[0]=v("svg",{viewBox:"0 0 90 90",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[v("path",{d:"M50.0016 71.0999h29.2561c.9293.0001 1.8422-.241 2.6469-.6992.8047-.4582 1.4729-1.1173 1.9373-1.9109.4645-.7936.7088-1.6939.7083-2.6102-.0004-.9162-.2455-1.8163-.7106-2.6095L64.192 29.713c-.4644-.7934-1.1325-1.4523-1.937-1.9105-.8046-.4581-1.7173-.6993-2.6463-.6993-.9291 0-1.8418.2412-2.6463.6993-.8046.4582-1.4726 1.1171-1.937 1.9105l-5.0238 8.5861-9.8224-16.7898c-.4648-.7934-1.1332-1.4522-1.938-1.9102-.8047-.4581-1.7176-.6992-2.6468-.6992-.9292 0-1.842.2411-2.6468.6992-.8048.458-1.4731 1.1168-1.9379 1.9102L6.56062 63.2701c-.46512.7932-.71021 1.6933-.71061 2.6095-.00041.9163.24389 1.8166.70831 2.6102.46443.7936 1.1326 1.4527 1.93732 1.9109.80473.4582 1.71766.6993 2.64686.6992h18.3646c7.2763 0 12.6422-3.1516 16.3345-9.3002l8.9642-15.3081 4.8015-8.1925 14.4099 24.6083H54.8058l-4.8042 8.1925ZM29.2077 62.899l-12.8161-.0028L35.603 30.0869l9.5857 16.4047-6.418 10.9645c-2.4521 3.9894-5.2377 5.4429-9.563 5.4429Z",fill:"currentColor"})],-1)),d[1]||(d[1]=v("span",null,"Preview enabled",-1)),v("button",{onClick:c}," Close ")],64)):O("",!0)],2)):O("",!0),te(ne,{name:"preview-loading"},{default:ie(()=>[s.value&&!a.value&&!p.value?(N(),L("div",Ge,[d[4]||(d[4]=v("div",{id:"__preview_background"},null,-1)),v("div",{id:"__preview_loader"},[d[2]||(d[2]=v("svg",{id:"__preview_loading_icon",width:"32",height:"32",viewBox:"0 0 24 24"},[v("path",{fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M4 4v5h.582m15.356 2A8.001 8.001 0 0 0 4.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 0 1-15.357-2m15.357 2H15"})],-1)),d[3]||(d[3]=v("p",null,"Initializing the preview...",-1)),v("button",{onClick:c}," Cancel ")])])):O("",!0)]),_:1}),te(ne,{name:"preview-loading"},{default:ie(()=>[p.value?(N(),L("div",Ze,[d[5]||(d[5]=v("div",{id:"__preview_background"},null,-1)),v("div",Je,[v("p",null,Fe(p.value),1),v("button",{onClick:c}," Exit preview ")])])):O("",!0)]),_:1})]))}},tt=Oe(et,[["__scopeId","data-v-e885c171"]]),it=/^[A-Za-z]:\//;function F(i=""){return i&&i.replace(/\\/g,"/").replace(it,e=>e.toUpperCase())}const nt=/^[/\\]{2}/,st=/^[/\\](?![/\\])|^[/\\]{2}(?!\.)|^[A-Za-z]:[/\\]/,ke=/^[A-Za-z]:$/,rt=/.(\.[^./]+|\.)$/,ot=/^[/\\]|^[a-zA-Z]:[/\\]/,at=function(i){if(i.length===0)return".";i=F(i);const e=i.match(nt),t=K(i),n=i[i.length-1]==="/";return i=pt(i,!t),i.length===0?t?"/":n?"./":".":(n&&(i+="/"),ke.test(i)&&(i+="/"),e?t?`//${i}`:`//./${i}`:t&&!K(i)?`/${i}`:i)},Te=function(...i){let e="";for(const t of i)if(t)if(e.length>0){const n=e[e.length-1]==="/",r=t[0]==="/";n&&r?e+=t.slice(1):e+=n||r?t:`/${t}`}else e+=t;return at(e)};function pt(i,e){let t="",n=0,r=-1,s=0,o=null;for(let a=0;a<=i.length;++a){if(a<i.length)o=i[a];else{if(o==="/")break;o="/"}if(o==="/"){if(!(r===a-1||s===1))if(s===2){if(t.length<2||n!==2||t[t.length-1]!=="."||t[t.length-2]!=="."){if(t.length>2){const p=t.lastIndexOf("/");p===-1?(t="",n=0):(t=t.slice(0,p),n=t.length-1-t.lastIndexOf("/")),r=a,s=0;continue}else if(t.length>0){t="",n=0,r=a,s=0;continue}}e&&(t+=t.length>0?"/..":"..",n=2)}else t.length>0?t+=`/${i.slice(r+1,a)}`:t=i.slice(r+1,a),n=a-r-1;r=a,s=0}else o==="."&&s!==-1?++s:s=-1}return t}const K=function(i){return st.test(i)},lt=function(i){if(i==="..")return"";const e=rt.exec(F(i));return e&&e[1]||""},Ee=function(i){const e=F(i).replace(/\/$/,"").split("/").slice(0,-1);return e.length===1&&ke.test(e[0])&&(e[0]+="/"),e.join("/")||(K(i)?"/":".")},ct=function(i,e){const t=F(i).split("/");let n="";for(let r=t.length-1;r>=0;r--){const s=t[r];if(s){n=s;break}}return e&&n.endsWith(e)?n.slice(0,-e.length):n},dt=function(i){const e=ot.exec(i)?.[0]?.replace(/\\/g,"/")||"",t=ct(i),n=lt(t);return{root:e,dir:Ee(i),base:t,ext:n,name:t.slice(0,t.length-n.length)}},x={appConfig:"app.config.ts",appConfigV4:"app/app.config.ts",nuxtConfig:"nuxt.config.ts"};function U(i){return i?.startsWith("content/")?i.split("/").slice(1).join("/"):Z(i)}function j(i,e=!1){return i&&(e?fe(i.replace(/\/\d+\./,"/")):Z(i.replace(/^\d+\./,"")))}function z(i){const e=U(i);return Te(Ee(e),dt(e).name)}function gt(i=[],e,t){const n=[...e||[]],r=[...t||[]],s=JSON.parse(JSON.stringify(i));for(const a of n)if(a.new)s.push({path:a.path,parsed:a.parsed});else if(a.oldPath)if(r.splice(r.findIndex(l=>l.path===a.oldPath),1),n.find(l=>l.path===a.oldPath))s.push({path:a.path,parsed:a.parsed});else{const l=s.find(c=>c.path===a.oldPath);l&&(l.path=a.path,a.parsed?l.parsed=a.parsed:a.pathMeta&&["_file","_path","_id","_locale"].forEach(c=>{l.parsed[c]=a.pathMeta[c]}))}else{const p=s.find(l=>l.path===a.path);p?Object.assign(p,{path:a.path,parsed:a.parsed}):s.push({path:a.path,parsed:a.parsed})}for(const a of r)s.splice(s.findIndex(p=>p.path===a.path),1);const o=new Intl.Collator(void 0,{numeric:!0});return s.sort((a,p)=>o.compare(a.path,p.path)),s}const mt=Be((i,e,t)=>{if(Array.isArray(i[e])&&Array.isArray(t))return i[e]=t,!0}),ut=i=>{let e;return t=>(e||(e=i()),e)};function _e(i,e){for(const t in i){const n=e[t];t in e||delete i[t],n!==null&&typeof n=="object"&&_e(i[t],e[t])}}function ve(i,e){for(const t in e){const n=e[t];if(n==="_DELETED_"){delete i[t];continue}n!==null&&typeof n=="object"?Array.isArray(n)&&Array.isArray(i[t])?i[t]=n:(i[t]=i[t]||{},ve(i[t],n)):i[t]=n}}function we(i){const[e,...t]=i.include.includes("*")?i.include.split("*"):["",i.include];return{fixed:e||"",dynamic:"*"+t.join("*")}}const Ae=(i,e,t)=>{const{fixed:n}=we(t);if(!i.parsed)return;const r=j(n||""),s=j(t?.prefix||"",!0),o=i.parsed._path.substring(r.length),a=Te(s,o),p={id:i.parsed._id,stem:i.parsed._stem,meta:{},extension:i.parsed._extension,path:a},l=e.schema.definitions[e.name].properties;return Object.keys(i.parsed).forEach(c=>{c in l?p[c]=i.parsed[c]:p.meta[c]=i.parsed[c]}),p},Se=(i,e,t)=>{const n=i instanceof RegExp?oe(i,t):i,r=e instanceof RegExp?oe(e,t):e,s=n!==null&&r!=null&&ht(n,r,t);return s&&{start:s[0],end:s[1],pre:t.slice(0,s[0]),body:t.slice(s[0]+n.length,s[1]),post:t.slice(s[1]+r.length)}},oe=(i,e)=>{const t=e.match(i);return t?t[0]:null},ht=(i,e,t)=>{let n,r,s,o,a,p=t.indexOf(i),l=t.indexOf(e,p+1),c=p;if(p>=0&&l>0){if(i===e)return[p,l];for(n=[],s=t.length;c>=0&&!a;){if(c===p)n.push(c),p=t.indexOf(i,c+1);else if(n.length===1){const h=n.pop();h!==void 0&&(a=[h,l])}else r=n.pop(),r!==void 0&&r<s&&(s=r,o=l),l=t.indexOf(e,c+1);c=p<l&&p>=0?p:l}n.length&&o!==void 0&&(a=[s,o])}return a},xe="\0SLASH"+Math.random()+"\0",Re="\0OPEN"+Math.random()+"\0",J="\0CLOSE"+Math.random()+"\0",je="\0COMMA"+Math.random()+"\0",Pe="\0PERIOD"+Math.random()+"\0",ft=new RegExp(xe,"g"),yt=new RegExp(Re,"g"),bt=new RegExp(J,"g"),kt=new RegExp(je,"g"),Tt=new RegExp(Pe,"g"),Et=/\\\\/g,_t=/\\{/g,vt=/\\}/g,wt=/\\,/g,At=/\\./g;function W(i){return isNaN(i)?i.charCodeAt(0):parseInt(i,10)}function St(i){return i.replace(Et,xe).replace(_t,Re).replace(vt,J).replace(wt,je).replace(At,Pe)}function xt(i){return i.replace(ft,"\\").replace(yt,"{").replace(bt,"}").replace(kt,",").replace(Tt,".")}function Ce(i){if(!i)return[""];const e=[],t=Se("{","}",i);if(!t)return i.split(",");const{pre:n,body:r,post:s}=t,o=n.split(",");o[o.length-1]+="{"+r+"}";const a=Ce(s);return s.length&&(o[o.length-1]+=a.shift(),o.push.apply(o,a)),e.push.apply(e,o),e}function Rt(i){return i?(i.slice(0,2)==="{}"&&(i="\\{\\}"+i.slice(2)),$(St(i),!0).map(xt)):[]}function jt(i){return"{"+i+"}"}function Pt(i){return/^-?0\d/.test(i)}function Ct(i,e){return i<=e}function Lt(i,e){return i>=e}function $(i,e){const t=[],n=Se("{","}",i);if(!n)return[i];const r=n.pre,s=n.post.length?$(n.post,!1):[""];if(/\$$/.test(n.pre))for(let o=0;o<s.length;o++){const a=r+"{"+n.body+"}"+s[o];t.push(a)}else{const o=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(n.body),a=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(n.body),p=o||a,l=n.body.indexOf(",")>=0;if(!p&&!l)return n.post.match(/,(?!,).*\}/)?(i=n.pre+"{"+n.body+J+n.post,$(i)):[i];let c;if(p)c=n.body.split(/\.\./);else if(c=Ce(n.body),c.length===1&&c[0]!==void 0&&(c=$(c[0],!1).map(jt),c.length===1))return s.map(u=>n.pre+c[0]+u);let h;if(p&&c[0]!==void 0&&c[1]!==void 0){const u=W(c[0]),d=W(c[1]),m=Math.max(c[0].length,c[1].length);let g=c.length===3&&c[2]!==void 0?Math.abs(W(c[2])):1,f=Ct;d<u&&(g*=-1,f=Lt);const E=c.some(Pt);h=[];for(let y=u;f(y,d);y+=g){let T;if(a)T=String.fromCharCode(y),T==="\\"&&(T="");else if(T=String(y),E){const S=m-T.length;if(S>0){const R=new Array(S+1).join("0");y<0?T="-"+R+T.slice(1):T=R+T}}h.push(T)}}else{h=[];for(let u=0;u<c.length;u++)h.push.apply(h,$(c[u],!1))}for(let u=0;u<h.length;u++)for(let d=0;d<s.length;d++){const m=r+h[u]+s[d];(!e||p||m)&&t.push(m)}}return t}const Nt=1024*64,V=i=>{if(typeof i!="string")throw new TypeError("invalid pattern");if(i.length>Nt)throw new TypeError("pattern is too long")},It={"[:alnum:]":["\\p{L}\\p{Nl}\\p{Nd}",!0],"[:alpha:]":["\\p{L}\\p{Nl}",!0],"[:ascii:]":["\\x00-\\x7f",!1],"[:blank:]":["\\p{Zs}\\t",!0],"[:cntrl:]":["\\p{Cc}",!0],"[:digit:]":["\\p{Nd}",!0],"[:graph:]":["\\p{Z}\\p{C}",!0,!0],"[:lower:]":["\\p{Ll}",!0],"[:print:]":["\\p{C}",!0],"[:punct:]":["\\p{P}",!0],"[:space:]":["\\p{Z}\\t\\r\\n\\v\\f",!0],"[:upper:]":["\\p{Lu}",!0],"[:word:]":["\\p{L}\\p{Nl}\\p{Nd}\\p{Pc}",!0],"[:xdigit:]":["A-Fa-f0-9",!1]},I=i=>i.replace(/[[\]\\-]/g,"\\$&"),Xt=i=>i.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),ae=i=>i.join(""),$t=(i,e)=>{const t=e;if(i.charAt(t)!=="[")throw new Error("not in a brace expression");const n=[],r=[];let s=t+1,o=!1,a=!1,p=!1,l=!1,c=t,h="";e:for(;s<i.length;){const g=i.charAt(s);if((g==="!"||g==="^")&&s===t+1){l=!0,s++;continue}if(g==="]"&&o&&!p){c=s+1;break}if(o=!0,g==="\\"&&!p){p=!0,s++;continue}if(g==="["&&!p){for(const[f,[k,E,y]]of Object.entries(It))if(i.startsWith(f,s)){if(h)return["$.",!1,i.length-t,!0];s+=f.length,y?r.push(k):n.push(k),a=a||E;continue e}}if(p=!1,h){g>h?n.push(I(h)+"-"+I(g)):g===h&&n.push(I(g)),h="",s++;continue}if(i.startsWith("-]",s+1)){n.push(I(g+"-")),s+=2;continue}if(i.startsWith("-",s+1)){h=g,s+=2;continue}n.push(I(g)),s++}if(c<s)return["",!1,0,!1];if(!n.length&&!r.length)return["$.",!1,i.length-t,!0];if(r.length===0&&n.length===1&&/^\\?.$/.test(n[0])&&!l){const g=n[0].length===2?n[0].slice(-1):n[0];return[Xt(g),!1,c-t,!1]}const u="["+(l?"^":"")+ae(n)+"]",d="["+(l?"":"^")+ae(r)+"]";return[n.length&&r.length?"("+u+"|"+d+")":n.length?u:d,a,c-t,!0]},M=(i,{windowsPathsNoEscape:e=!1}={})=>e?i.replace(/\[([^\/\\])\]/g,"$1"):i.replace(/((?!\\).|^)\[([^\/\\])\]/g,"$1$2").replace(/\\([^\/])/g,"$1"),Mt=new Set(["!","?","+","*","@"]),pe=i=>Mt.has(i),Ot="(?!(?:^|/)\\.\\.?(?:$|/))",H="(?!\\.)",Ht=new Set(["[","."]),qt=new Set(["..","."]),Ut=new Set("().*{}+?[]^$\\!"),Vt=i=>i.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),ee="[^/]",le=ee+"*?",ce=ee+"+?";class _{type;#i;#n;#r=!1;#e=[];#t;#o;#p;#a=!1;#s;#l;#d=!1;constructor(e,t,n={}){this.type=e,e&&(this.#n=!0),this.#t=t,this.#i=this.#t?this.#t.#i:this,this.#s=this.#i===this?n:this.#i.#s,this.#p=this.#i===this?[]:this.#i.#p,e==="!"&&!this.#i.#a&&this.#p.push(this),this.#o=this.#t?this.#t.#e.length:0}get hasMagic(){if(this.#n!==void 0)return this.#n;for(const e of this.#e)if(typeof e!="string"&&(e.type||e.hasMagic))return this.#n=!0;return this.#n}toString(){return this.#l!==void 0?this.#l:this.type?this.#l=this.type+"("+this.#e.map(e=>String(e)).join("|")+")":this.#l=this.#e.map(e=>String(e)).join("")}#m(){if(this!==this.#i)throw new Error("should only call on root");if(this.#a)return this;this.toString(),this.#a=!0;let e;for(;e=this.#p.pop();){if(e.type!=="!")continue;let t=e,n=t.#t;for(;n;){for(let r=t.#o+1;!n.type&&r<n.#e.length;r++)for(const s of e.#e){if(typeof s=="string")throw new Error("string part in extglob AST??");s.copyIn(n.#e[r])}t=n,n=t.#t}}return this}push(...e){for(const t of e)if(t!==""){if(typeof t!="string"&&!(t instanceof _&&t.#t===this))throw new Error("invalid part: "+t);this.#e.push(t)}}toJSON(){const e=this.type===null?this.#e.slice().map(t=>typeof t=="string"?t:t.toJSON()):[this.type,...this.#e.map(t=>t.toJSON())];return this.isStart()&&!this.type&&e.unshift([]),this.isEnd()&&(this===this.#i||this.#i.#a&&this.#t?.type==="!")&&e.push({}),e}isStart(){if(this.#i===this)return!0;if(!this.#t?.isStart())return!1;if(this.#o===0)return!0;const e=this.#t;for(let t=0;t<this.#o;t++){const n=e.#e[t];if(!(n instanceof _&&n.type==="!"))return!1}return!0}isEnd(){if(this.#i===this||this.#t?.type==="!")return!0;if(!this.#t?.isEnd())return!1;if(!this.type)return this.#t?.isEnd();const e=this.#t?this.#t.#e.length:0;return this.#o===e-1}copyIn(e){typeof e=="string"?this.push(e):this.push(e.clone(this))}clone(e){const t=new _(this.type,e);for(const n of this.#e)t.copyIn(n);return t}static#c(e,t,n,r){let s=!1,o=!1,a=-1,p=!1;if(t.type===null){let d=n,m="";for(;d<e.length;){const g=e.charAt(d++);if(s||g==="\\"){s=!s,m+=g;continue}if(o){d===a+1?(g==="^"||g==="!")&&(p=!0):g==="]"&&!(d===a+2&&p)&&(o=!1),m+=g;continue}else if(g==="["){o=!0,a=d,p=!1,m+=g;continue}if(!r.noext&&pe(g)&&e.charAt(d)==="("){t.push(m),m="";const f=new _(g,t);d=_.#c(e,f,d,r),t.push(f);continue}m+=g}return t.push(m),d}let l=n+1,c=new _(null,t);const h=[];let u="";for(;l<e.length;){const d=e.charAt(l++);if(s||d==="\\"){s=!s,u+=d;continue}if(o){l===a+1?(d==="^"||d==="!")&&(p=!0):d==="]"&&!(l===a+2&&p)&&(o=!1),u+=d;continue}else if(d==="["){o=!0,a=l,p=!1,u+=d;continue}if(pe(d)&&e.charAt(l)==="("){c.push(u),u="";const m=new _(d,c);c.push(m),l=_.#c(e,m,l,r);continue}if(d==="|"){c.push(u),u="",h.push(c),c=new _(null,t);continue}if(d===")")return u===""&&t.#e.length===0&&(t.#d=!0),c.push(u),u="",t.push(...h,c),l;u+=d}return t.type=null,t.#n=void 0,t.#e=[e.substring(n-1)],l}static fromGlob(e,t={}){const n=new _(null,void 0,t);return _.#c(e,n,0,t),n}toMMPattern(){if(this!==this.#i)return this.#i.toMMPattern();const e=this.toString(),[t,n,r,s]=this.toRegExpSource();if(!(r||this.#n||this.#s.nocase&&!this.#s.nocaseMagicOnly&&e.toUpperCase()!==e.toLowerCase()))return n;const a=(this.#s.nocase?"i":"")+(s?"u":"");return Object.assign(new RegExp(`^${t}$`,a),{_src:t,_glob:e})}get options(){return this.#s}toRegExpSource(e){const t=e??!!this.#s.dot;if(this.#i===this&&this.#m(),!this.type){const p=this.isStart()&&this.isEnd(),l=this.#e.map(d=>{const[m,g,f,k]=typeof d=="string"?_.#u(d,this.#n,p):d.toRegExpSource(e);return this.#n=this.#n||f,this.#r=this.#r||k,m}).join("");let c="";if(this.isStart()&&typeof this.#e[0]=="string"&&!(this.#e.length===1&&qt.has(this.#e[0]))){const m=Ht,g=t&&m.has(l.charAt(0))||l.startsWith("\\.")&&m.has(l.charAt(2))||l.startsWith("\\.\\.")&&m.has(l.charAt(4)),f=!t&&!e&&m.has(l.charAt(0));c=g?Ot:f?H:""}let h="";return this.isEnd()&&this.#i.#a&&this.#t?.type==="!"&&(h="(?:$|\\/)"),[c+l+h,M(l),this.#n=!!this.#n,this.#r]}const n=this.type==="*"||this.type==="+",r=this.type==="!"?"(?:(?!(?:":"(?:";let s=this.#g(t);if(this.isStart()&&this.isEnd()&&!s&&this.type!=="!"){const p=this.toString();return this.#e=[p],this.type=null,this.#n=void 0,[p,M(this.toString()),!1,!1]}let o=!n||e||t||!H?"":this.#g(!0);o===s&&(o=""),o&&(s=`(?:${s})(?:${o})*?`);let a="";if(this.type==="!"&&this.#d)a=(this.isStart()&&!t?H:"")+ce;else{const p=this.type==="!"?"))"+(this.isStart()&&!t&&!e?H:"")+le+")":this.type==="@"?")":this.type==="?"?")?":this.type==="+"&&o?")":this.type==="*"&&o?")?":`)${this.type}`;a=r+s+p}return[a,M(s),this.#n=!!this.#n,this.#r]}#g(e){return this.#e.map(t=>{if(typeof t=="string")throw new Error("string type in extglob ast??");const[n,r,s,o]=t.toRegExpSource(e);return this.#r=this.#r||o,n}).filter(t=>!(this.isStart()&&this.isEnd())||!!t).join("|")}static#u(e,t,n=!1){let r=!1,s="",o=!1;for(let a=0;a<e.length;a++){const p=e.charAt(a);if(r){r=!1,s+=(Ut.has(p)?"\\":"")+p;continue}if(p==="\\"){a===e.length-1?s+="\\\\":r=!0;continue}if(p==="["){const[l,c,h,u]=$t(e,a);if(h){s+=l,o=o||c,a+=h-1,t=t||u;continue}}if(p==="*"){n&&e==="*"?s+=ce:s+=le,t=!0;continue}if(p==="?"){s+=ee,t=!0;continue}s+=Vt(p)}return[s,M(e),!!t,o]}}const Dt=(i,{windowsPathsNoEscape:e=!1}={})=>e?i.replace(/[?*()[\]]/g,"[$&]"):i.replace(/[?*()[\]\\]/g,"\\$&");var Y={};const b=(i,e,t={})=>(V(e),!t.nocomment&&e.charAt(0)==="#"?!1:new B(e,t).match(i)),Ft=/^\*+([^+@!?\*\[\(]*)$/,Bt=i=>e=>!e.startsWith(".")&&e.endsWith(i),zt=i=>e=>e.endsWith(i),Wt=i=>(i=i.toLowerCase(),e=>!e.startsWith(".")&&e.toLowerCase().endsWith(i)),Yt=i=>(i=i.toLowerCase(),e=>e.toLowerCase().endsWith(i)),Kt=/^\*+\.\*+$/,Qt=i=>!i.startsWith(".")&&i.includes("."),Gt=i=>i!=="."&&i!==".."&&i.includes("."),Zt=/^\.\*+$/,Jt=i=>i!=="."&&i!==".."&&i.startsWith("."),ei=/^\*+$/,ti=i=>i.length!==0&&!i.startsWith("."),ii=i=>i.length!==0&&i!=="."&&i!=="..",ni=/^\?+([^+@!?\*\[\(]*)?$/,si=([i,e=""])=>{const t=Le([i]);return e?(e=e.toLowerCase(),n=>t(n)&&n.toLowerCase().endsWith(e)):t},ri=([i,e=""])=>{const t=Ne([i]);return e?(e=e.toLowerCase(),n=>t(n)&&n.toLowerCase().endsWith(e)):t},oi=([i,e=""])=>{const t=Ne([i]);return e?n=>t(n)&&n.endsWith(e):t},ai=([i,e=""])=>{const t=Le([i]);return e?n=>t(n)&&n.endsWith(e):t},Le=([i])=>{const e=i.length;return t=>t.length===e&&!t.startsWith(".")},Ne=([i])=>{const e=i.length;return t=>t.length===e&&t!=="."&&t!==".."},Ie=typeof process=="object"&&process?typeof Y=="object"&&Y&&Y.__MINIMATCH_TESTING_PLATFORM__||process.platform:"posix",de={win32:{sep:"\\"},posix:{sep:"/"}},pi=Ie==="win32"?de.win32.sep:de.posix.sep;b.sep=pi;const A=Symbol("globstar **");b.GLOBSTAR=A;const li="[^/]",ci=li+"*?",di="(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?",gi="(?:(?!(?:\\/|^)\\.).)*?",mi=(i,e={})=>t=>b(t,i,e);b.filter=mi;const w=(i,e={})=>Object.assign({},i,e),ui=i=>{if(!i||typeof i!="object"||!Object.keys(i).length)return b;const e=b;return Object.assign((n,r,s={})=>e(n,r,w(i,s)),{Minimatch:class extends e.Minimatch{constructor(r,s={}){super(r,w(i,s))}static defaults(r){return e.defaults(w(i,r)).Minimatch}},AST:class extends e.AST{constructor(r,s,o={}){super(r,s,w(i,o))}static fromGlob(r,s={}){return e.AST.fromGlob(r,w(i,s))}},unescape:(n,r={})=>e.unescape(n,w(i,r)),escape:(n,r={})=>e.escape(n,w(i,r)),filter:(n,r={})=>e.filter(n,w(i,r)),defaults:n=>e.defaults(w(i,n)),makeRe:(n,r={})=>e.makeRe(n,w(i,r)),braceExpand:(n,r={})=>e.braceExpand(n,w(i,r)),match:(n,r,s={})=>e.match(n,r,w(i,s)),sep:e.sep,GLOBSTAR:A})};b.defaults=ui;const Xe=(i,e={})=>(V(i),e.nobrace||!/\{(?:(?!\{).)*\}/.test(i)?[i]:Rt(i));b.braceExpand=Xe;const hi=(i,e={})=>new B(i,e).makeRe();b.makeRe=hi;const fi=(i,e,t={})=>{const n=new B(e,t);return i=i.filter(r=>n.match(r)),n.options.nonull&&!i.length&&i.push(e),i};b.match=fi;const ge=/[?*]|[+@!]\(.*?\)|\[|\]/,yi=i=>i.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");class B{options;set;pattern;windowsPathsNoEscape;nonegate;negate;comment;empty;preserveMultipleSlashes;partial;globSet;globParts;nocase;isWindows;platform;windowsNoMagicRoot;regexp;constructor(e,t={}){V(e),t=t||{},this.options=t,this.pattern=e,this.platform=t.platform||Ie,this.isWindows=this.platform==="win32",this.windowsPathsNoEscape=!!t.windowsPathsNoEscape||t.allowWindowsEscape===!1,this.windowsPathsNoEscape&&(this.pattern=this.pattern.replace(/\\/g,"/")),this.preserveMultipleSlashes=!!t.preserveMultipleSlashes,this.regexp=null,this.negate=!1,this.nonegate=!!t.nonegate,this.comment=!1,this.empty=!1,this.partial=!!t.partial,this.nocase=!!this.options.nocase,this.windowsNoMagicRoot=t.windowsNoMagicRoot!==void 0?t.windowsNoMagicRoot:!!(this.isWindows&&this.nocase),this.globSet=[],this.globParts=[],this.set=[],this.make()}hasMagic(){if(this.options.magicalBraces&&this.set.length>1)return!0;for(const e of this.set)for(const t of e)if(typeof t!="string")return!0;return!1}debug(...e){}make(){const e=this.pattern,t=this.options;if(!t.nocomment&&e.charAt(0)==="#"){this.comment=!0;return}if(!e){this.empty=!0;return}this.parseNegate(),this.globSet=[...new Set(this.braceExpand())],t.debug&&(this.debug=(...s)=>console.error(...s)),this.debug(this.pattern,this.globSet);const n=this.globSet.map(s=>this.slashSplit(s));this.globParts=this.preprocess(n),this.debug(this.pattern,this.globParts);let r=this.globParts.map((s,o,a)=>{if(this.isWindows&&this.windowsNoMagicRoot){const p=s[0]===""&&s[1]===""&&(s[2]==="?"||!ge.test(s[2]))&&!ge.test(s[3]),l=/^[a-z]:/i.test(s[0]);if(p)return[...s.slice(0,4),...s.slice(4).map(c=>this.parse(c))];if(l)return[s[0],...s.slice(1).map(c=>this.parse(c))]}return s.map(p=>this.parse(p))});if(this.debug(this.pattern,r),this.set=r.filter(s=>s.indexOf(!1)===-1),this.isWindows)for(let s=0;s<this.set.length;s++){const o=this.set[s];o[0]===""&&o[1]===""&&this.globParts[s][2]==="?"&&typeof o[3]=="string"&&/^[a-z]:$/i.test(o[3])&&(o[2]="?")}this.debug(this.pattern,this.set)}preprocess(e){if(this.options.noglobstar)for(let n=0;n<e.length;n++)for(let r=0;r<e[n].length;r++)e[n][r]==="**"&&(e[n][r]="*");const{optimizationLevel:t=1}=this.options;return t>=2?(e=this.firstPhasePreProcess(e),e=this.secondPhasePreProcess(e)):t>=1?e=this.levelOneOptimize(e):e=this.adjascentGlobstarOptimize(e),e}adjascentGlobstarOptimize(e){return e.map(t=>{let n=-1;for(;(n=t.indexOf("**",n+1))!==-1;){let r=n;for(;t[r+1]==="**";)r++;r!==n&&t.splice(n,r-n)}return t})}levelOneOptimize(e){return e.map(t=>(t=t.reduce((n,r)=>{const s=n[n.length-1];return r==="**"&&s==="**"?n:r===".."&&s&&s!==".."&&s!=="."&&s!=="**"?(n.pop(),n):(n.push(r),n)},[]),t.length===0?[""]:t))}levelTwoFileOptimize(e){Array.isArray(e)||(e=this.slashSplit(e));let t=!1;do{if(t=!1,!this.preserveMultipleSlashes){for(let r=1;r<e.length-1;r++){const s=e[r];r===1&&s===""&&e[0]===""||(s==="."||s==="")&&(t=!0,e.splice(r,1),r--)}e[0]==="."&&e.length===2&&(e[1]==="."||e[1]==="")&&(t=!0,e.pop())}let n=0;for(;(n=e.indexOf("..",n+1))!==-1;){const r=e[n-1];r&&r!=="."&&r!==".."&&r!=="**"&&(t=!0,e.splice(n-1,2),n-=2)}}while(t);return e.length===0?[""]:e}firstPhasePreProcess(e){let t=!1;do{t=!1;for(let n of e){let r=-1;for(;(r=n.indexOf("**",r+1))!==-1;){let o=r;for(;n[o+1]==="**";)o++;o>r&&n.splice(r+1,o-r);let a=n[r+1];const p=n[r+2],l=n[r+3];if(a!==".."||!p||p==="."||p===".."||!l||l==="."||l==="..")continue;t=!0,n.splice(r,1);const c=n.slice(0);c[r]="**",e.push(c),r--}if(!this.preserveMultipleSlashes){for(let o=1;o<n.length-1;o++){const a=n[o];o===1&&a===""&&n[0]===""||(a==="."||a==="")&&(t=!0,n.splice(o,1),o--)}n[0]==="."&&n.length===2&&(n[1]==="."||n[1]==="")&&(t=!0,n.pop())}let s=0;for(;(s=n.indexOf("..",s+1))!==-1;){const o=n[s-1];if(o&&o!=="."&&o!==".."&&o!=="**"){t=!0;const p=s===1&&n[s+1]==="**"?["."]:[];n.splice(s-1,2,...p),n.length===0&&n.push(""),s-=2}}}}while(t);return e}secondPhasePreProcess(e){for(let t=0;t<e.length-1;t++)for(let n=t+1;n<e.length;n++){const r=this.partsMatch(e[t],e[n],!this.preserveMultipleSlashes);if(r){e[t]=[],e[n]=r;break}}return e.filter(t=>t.length)}partsMatch(e,t,n=!1){let r=0,s=0,o=[],a="";for(;r<e.length&&s<t.length;)if(e[r]===t[s])o.push(a==="b"?t[s]:e[r]),r++,s++;else if(n&&e[r]==="**"&&t[s]===e[r+1])o.push(e[r]),r++;else if(n&&t[s]==="**"&&e[r]===t[s+1])o.push(t[s]),s++;else if(e[r]==="*"&&t[s]&&(this.options.dot||!t[s].startsWith("."))&&t[s]!=="**"){if(a==="b")return!1;a="a",o.push(e[r]),r++,s++}else if(t[s]==="*"&&e[r]&&(this.options.dot||!e[r].startsWith("."))&&e[r]!=="**"){if(a==="a")return!1;a="b",o.push(t[s]),r++,s++}else return!1;return e.length===t.length&&o}parseNegate(){if(this.nonegate)return;const e=this.pattern;let t=!1,n=0;for(let r=0;r<e.length&&e.charAt(r)==="!";r++)t=!t,n++;n&&(this.pattern=e.slice(n)),this.negate=t}matchOne(e,t,n=!1){const r=this.options;if(this.isWindows){const g=typeof e[0]=="string"&&/^[a-z]:$/i.test(e[0]),f=!g&&e[0]===""&&e[1]===""&&e[2]==="?"&&/^[a-z]:$/i.test(e[3]),k=typeof t[0]=="string"&&/^[a-z]:$/i.test(t[0]),E=!k&&t[0]===""&&t[1]===""&&t[2]==="?"&&typeof t[3]=="string"&&/^[a-z]:$/i.test(t[3]),y=f?3:g?0:void 0,T=E?3:k?0:void 0;if(typeof y=="number"&&typeof T=="number"){const[S,R]=[e[y],t[T]];S.toLowerCase()===R.toLowerCase()&&(t[T]=S,T>y?t=t.slice(T):y>T&&(e=e.slice(y)))}}const{optimizationLevel:s=1}=this.options;s>=2&&(e=this.levelTwoFileOptimize(e)),this.debug("matchOne",this,{file:e,pattern:t}),this.debug("matchOne",e.length,t.length);for(var o=0,a=0,p=e.length,l=t.length;o<p&&a<l;o++,a++){this.debug("matchOne loop");var c=t[a],h=e[o];if(this.debug(t,c,h),c===!1)return!1;if(c===A){this.debug("GLOBSTAR",[t,c,h]);var u=o,d=a+1;if(d===l){for(this.debug("** at the end");o<p;o++)if(e[o]==="."||e[o]===".."||!r.dot&&e[o].charAt(0)===".")return!1;return!0}for(;u<p;){var m=e[u];if(this.debug(`
globstar while`,e,u,t,d,m),this.matchOne(e.slice(u),t.slice(d),n))return this.debug("globstar found match!",u,p,m),!0;if(m==="."||m===".."||!r.dot&&m.charAt(0)==="."){this.debug("dot detected!",e,u,t,d);break}this.debug("globstar swallow a segment, and continue"),u++}return!!(n&&(this.debug(`
>>> no match, partial?`,e,u,t,d),u===p))}let g;if(typeof c=="string"?(g=h===c,this.debug("string match",c,h,g)):(g=c.test(h),this.debug("pattern match",c,h,g)),!g)return!1}if(o===p&&a===l)return!0;if(o===p)return n;if(a===l)return o===p-1&&e[o]==="";throw new Error("wtf?")}braceExpand(){return Xe(this.pattern,this.options)}parse(e){V(e);const t=this.options;if(e==="**")return A;if(e==="")return"";let n,r=null;(n=e.match(ei))?r=t.dot?ii:ti:(n=e.match(Ft))?r=(t.nocase?t.dot?Yt:Wt:t.dot?zt:Bt)(n[1]):(n=e.match(ni))?r=(t.nocase?t.dot?ri:si:t.dot?oi:ai)(n):(n=e.match(Kt))?r=t.dot?Gt:Qt:(n=e.match(Zt))&&(r=Jt);const s=_.fromGlob(e,this.options).toMMPattern();return r&&typeof s=="object"&&Reflect.defineProperty(s,"test",{value:r}),s}makeRe(){if(this.regexp||this.regexp===!1)return this.regexp;const e=this.set;if(!e.length)return this.regexp=!1,this.regexp;const t=this.options,n=t.noglobstar?ci:t.dot?di:gi,r=new Set(t.nocase?["i"]:[]);let s=e.map(p=>{const l=p.map(c=>{if(c instanceof RegExp)for(const h of c.flags.split(""))r.add(h);return typeof c=="string"?yi(c):c===A?A:c._src});return l.forEach((c,h)=>{const u=l[h+1],d=l[h-1];c!==A||d===A||(d===void 0?u!==void 0&&u!==A?l[h+1]="(?:\\/|"+n+"\\/)?"+u:l[h]=n:u===void 0?l[h-1]=d+"(?:\\/|"+n+")?":u!==A&&(l[h-1]=d+"(?:\\/|\\/"+n+"\\/)"+u,l[h+1]=A))}),l.filter(c=>c!==A).join("/")}).join("|");const[o,a]=e.length>1?["(?:",")"]:["",""];s="^"+o+s+a+"$",this.negate&&(s="^(?!"+s+").+$");try{this.regexp=new RegExp(s,[...r].join(""))}catch{this.regexp=!1}return this.regexp}slashSplit(e){return this.preserveMultipleSlashes?e.split("/"):this.isWindows&&/^\/\/[^\/]+/.test(e)?["",...e.split(/\/+/)]:e.split(/\/+/)}match(e,t=this.partial){if(this.debug("match",e,this.pattern),this.comment)return!1;if(this.empty)return e==="";if(e==="/"&&t)return!0;const n=this.options;this.isWindows&&(e=e.split("\\").join("/"));const r=this.slashSplit(e);this.debug(this.pattern,"split",r);const s=this.set;this.debug(this.pattern,"set",s);let o=r[r.length-1];if(!o)for(let a=r.length-2;!o&&a>=0;a--)o=r[a];for(let a=0;a<s.length;a++){const p=s[a];let l=r;if(n.matchBase&&p.length===1&&(l=[o]),this.matchOne(l,p,t))return n.flipNegate?!0:!this.negate}return n.flipNegate?!1:this.negate}static defaults(e){return b.defaults(e).Minimatch}}b.AST=_;b.Minimatch=B;b.escape=Dt;b.unescape=M;function bi(i){const e=Object.values(i.definitions)[0]?.properties||{},t=new Set([e.id?"id":void 0,e.title?"title":void 0,...Object.keys(e).sort()].filter(Boolean));return Array.from(t)}const q=(i,e)=>{let t;return{collection:Object.values(e).find(r=>{if(!r.source||r.source.length===0)return;const s=U(i);return(s==="/"?["index.yml","index.yaml","index.md","index.json"]:[s]).some(a=>(t=r.source.find(p=>{const l=b(a,p.include),c=p.exclude?.some(h=>b(a,h));return l&&!c}),t))}),matchedSource:t}},ki=(i,e)=>{let t;return{collection:Object.values(e).find(r=>{if(!(!r.source||r.source.length===0))return t=r.source.find(s=>{if(!s.prefix)return;const o=j(s.prefix,!0);if(!i.startsWith(o))return;if(i==="/"){const m=["index.yml","index.yaml","index.md","index.json"];return(i==="/"?m:m.map(f=>Z(re(o,f)))).some(f=>{const k=b(f,j(s.include)),E=s.exclude?.some(y=>b(f,j(y)));return k&&!E})}const{fixed:a}=we(s),p=j(a||""),l=i.substring(o.length),c=re(p,l),h=m=>m.replace(/\.[^/.]+$/,""),u=b(c,h(j(s.include))),d=s.exclude?.some(m=>b(c,h(j(m))));return u&&!d}),t}),matchedSource:t}};function $e(i,e){const t=Ei(i,e);let n=0;return`INSERT INTO ${i.tableName} VALUES (${"?, ".repeat(t.length).slice(0,-2)})`.replace(/\?/g,()=>t[n++])}function Ti(i,e,t){const n=Me(i,e),r=$e(i,t);return`${n}; ${r}`}function Me(i,e){return`DELETE FROM ${i.tableName} WHERE stem = '${e}';`}function me(i,e,t){return`SELECT * FROM ${i.tableName} WHERE ${e} = '${t}';`}function Ei(i,e){const t=[],n=i.schema.definitions[i.name].properties;return bi(i.schema).forEach(s=>{const o=n[s],a=i.fields[s],p=o?.default!==void 0?o.default:"NULL",l=typeof e[s]<"u"?e[s]:p;a==="json"?t.push(`'${JSON.stringify(l).replace(/'/g,"''")}'`):a==="string"||["string","enum"].includes(o.type)?["data","datetime"].includes(o.format)?t.push(l!=="NULL"?`'${new Date(l).toISOString()}'`:p):t.push(`'${String(l).replace(/\n/g,"\\n").replace(/'/g,"''")}'`):a==="boolean"?t.push(l!=="NULL"?!!l:l):t.push(l)}),t.push(`'${Qe(t)}'`),t}const _i=["https://nuxt.studio","https://dev.nuxt.studio"],C={docs:{name:"docs",pascalName:"Docs",tableName:"_content_docs",source:[{_resolved:!0,prefix:"/1.docs",include:"1.docs/**/*",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"page",fields:{id:"string",title:"string",body:"json",description:"string",extension:"string",meta:"json",navigation:"json",path:"string",seo:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{docs:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},path:{type:"string"},title:{type:"string",minLength:1},description:{type:"string",minLength:1},seo:{allOf:[{type:"object",properties:{title:{type:"string"},description:{type:"string"}}},{type:"object",additionalProperties:{}}],default:{}},body:{type:"object",properties:{type:{type:"string"},children:{},toc:{}},required:["type"],additionalProperties:!1},navigation:{anyOf:[{type:"boolean"},{type:"object",properties:{title:{type:"string"},description:{type:"string"},icon:{type:"string",$content:{editor:{input:"icon"}}}},required:["title","description","icon"],additionalProperties:!1}],default:!0}},required:["id","stem","extension","meta","path","title","description","body"],additionalProperties:!1}}},tableDefinition:`CREATE TABLE IF NOT EXISTS _content_docs (id TEXT PRIMARY KEY, "title" VARCHAR, "body" TEXT, "description" VARCHAR, "extension" VARCHAR, "meta" TEXT, "navigation" TEXT DEFAULT true, "path" VARCHAR, "seo" TEXT DEFAULT '{}', "stem" VARCHAR, "__hash__" TEXT UNIQUE);`},information:{name:"information",pascalName:"Information",tableName:"_content_information",source:[{_resolved:!0,prefix:"/4.info",include:"4.info/**/*",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"page",fields:{id:"string",title:"string",body:"json",description:"string",extension:"string",meta:"json",navigation:"json",path:"string",seo:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{information:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},path:{type:"string"},title:{type:"string",minLength:1},description:{type:"string",minLength:1},seo:{allOf:[{type:"object",properties:{title:{type:"string"},description:{type:"string"}}},{type:"object",additionalProperties:{}}],default:{}},body:{type:"object",properties:{type:{type:"string"},children:{},toc:{}},required:["type"],additionalProperties:!1},navigation:{anyOf:[{type:"boolean"},{type:"object",properties:{title:{type:"string"},description:{type:"string"},icon:{type:"string",$content:{editor:{input:"icon"}}}},required:["title","description","icon"],additionalProperties:!1}],default:!0}},required:["id","stem","extension","meta","path","title","description","body"],additionalProperties:!1}}},tableDefinition:`CREATE TABLE IF NOT EXISTS _content_information (id TEXT PRIMARY KEY, "title" VARCHAR, "body" TEXT, "description" VARCHAR, "extension" VARCHAR, "meta" TEXT, "navigation" TEXT DEFAULT true, "path" VARCHAR, "seo" TEXT DEFAULT '{}', "stem" VARCHAR, "__hash__" TEXT UNIQUE);`},mushroomInfo:{name:"mushroomInfo",pascalName:"MushroomInfo",tableName:"_content_mushroomInfo",source:[{_resolved:!0,prefix:"/6.svamparDocs",include:"6.svamparDocs/**/*",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"page",fields:{id:"string",title:"string",body:"json",description:"string",extension:"string",headline:"string",meta:"json",navigation:"json",path:"string",seo:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{mushroomInfo:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},path:{type:"string"},title:{type:"string",minLength:1},description:{type:"string",minLength:1},seo:{allOf:[{type:"object",properties:{title:{type:"string"},description:{type:"string"}}},{type:"object",additionalProperties:{}}],default:{}},body:{type:"object",properties:{type:{type:"string"},children:{},toc:{}},required:["type"],additionalProperties:!1},navigation:{anyOf:[{type:"boolean"},{type:"object",properties:{title:{type:"string"},description:{type:"string"},icon:{type:"string",$content:{editor:{input:"icon"}}}},required:["title","description","icon"],additionalProperties:!1}],default:!0},headline:{type:"string"}},required:["id","stem","extension","meta","path","title","description","body"],additionalProperties:!1}}},tableDefinition:`CREATE TABLE IF NOT EXISTS _content_mushroomInfo (id TEXT PRIMARY KEY, "title" VARCHAR, "body" TEXT, "description" VARCHAR, "extension" VARCHAR, "headline" VARCHAR NULL, "meta" TEXT, "navigation" TEXT DEFAULT true, "path" VARCHAR, "seo" TEXT DEFAULT '{}', "stem" VARCHAR, "__hash__" TEXT UNIQUE);`},posts:{name:"posts",pascalName:"Posts",tableName:"_content_posts",source:[{_resolved:!0,prefix:"/3.blog",include:"3.blog/**/*",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"page",fields:{id:"string",title:"string",authors:"json",badge:"json",body:"json",date:"string",description:"string",extension:"string",image:"json",meta:"json",navigation:"json",path:"string",seo:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{posts:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},path:{type:"string"},title:{type:"string",minLength:1},description:{type:"string",minLength:1},seo:{allOf:[{type:"object",properties:{title:{type:"string"},description:{type:"string"}}},{type:"object",additionalProperties:{}}],default:{}},body:{type:"object",properties:{type:{type:"string"},children:{},toc:{}},required:["type"],additionalProperties:!1},navigation:{anyOf:[{type:"boolean"},{type:"object",properties:{title:{type:"string"},description:{type:"string"},icon:{type:"string",$content:{editor:{input:"icon"}}}},required:["title","description","icon"],additionalProperties:!1}],default:!0},image:{type:"object",properties:{src:{type:"string",minLength:1}},required:["src"],additionalProperties:!1},authors:{type:"array",items:{type:"object",properties:{name:{type:"string",minLength:1},to:{type:"string",minLength:1},avatar:{type:"object",properties:{src:{type:"string",minLength:1}},required:["src"],additionalProperties:!1}},required:["name","to","avatar"],additionalProperties:!1}},date:{type:"string",minLength:1},badge:{type:"object",properties:{label:{type:"string",minLength:1}},required:["label"],additionalProperties:!1}},required:["id","stem","extension","meta","path","title","description","body","image","authors","date","badge"],additionalProperties:!1}}},tableDefinition:`CREATE TABLE IF NOT EXISTS _content_posts (id TEXT PRIMARY KEY, "title" VARCHAR, "authors" TEXT, "badge" TEXT, "body" TEXT, "date" VARCHAR, "description" VARCHAR, "extension" VARCHAR, "image" TEXT, "meta" TEXT, "navigation" TEXT DEFAULT true, "path" VARCHAR, "seo" TEXT DEFAULT '{}', "stem" VARCHAR, "__hash__" TEXT UNIQUE);`},index:{name:"index",pascalName:"Index",tableName:"_content_index",source:[{_resolved:!0,prefix:"/",include:"0.index.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"page",fields:{id:"string",title:"string",body:"json",description:"string",extension:"string",financing:"json",hero:"json",meta:"json",navigation:"json",path:"string",press:"json",sections:"json",seo:"json",stem:"string",timeline:"json"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{index:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},path:{type:"string"},title:{type:"string",minLength:1},description:{type:"string",minLength:1},seo:{allOf:[{type:"object",properties:{title:{type:"string"},description:{type:"string"}}},{type:"object",additionalProperties:{}}],default:{}},body:{type:"object",properties:{type:{type:"string"},children:{},toc:{}},required:["type"],additionalProperties:!1},navigation:{anyOf:[{type:"boolean"},{type:"object",properties:{title:{type:"string"},description:{type:"string"},icon:{type:"string",$content:{editor:{input:"icon"}}}},required:["title","description","icon"],additionalProperties:!1}],default:!0},hero:{type:"object",properties:{headline:{type:"object",properties:{label:{type:"string"},to:{type:"string"},icon:{$content:{editor:{input:"icon"}},type:"string"},color:{type:"string",enum:["primary","secondary","tertiary","rodeodust","poison","signal","info","success","warning","error","kalkmark","vanligmark","time","neutral"]}},additionalProperties:!1},title:{type:"string",minLength:1},description:{type:"string",minLength:1},links:{type:"array",items:{type:"object",properties:{label:{type:"string",minLength:1},to:{type:"string",minLength:1},icon:{$content:{editor:{input:"icon"}},type:"string"},size:{type:"string",enum:["xs","sm","md","lg","xl"]},trailing:{type:"boolean"},target:{type:"string"},color:{type:"string",enum:["primary","secondary","tertiary","rodeodust","poison","signal","info","success","warning","error","kalkmark","vanligmark","time","neutral"]},variant:{type:"string",enum:["solid","outline","subtle","soft","ghost","link"]}},required:["label","to"],additionalProperties:!1}}},required:["headline","title","description","links"],additionalProperties:!1},sections:{type:"array",items:{type:"object",properties:{headline:{type:"string"},title:{type:"string",minLength:1},description:{type:"string",minLength:1},id:{type:"string",minLength:1},src:{type:"string",minLength:1},orientation:{type:"string",enum:["vertical","horizontal"]},links:{type:"array",items:{type:"object",properties:{label:{type:"string",minLength:1},to:{type:"string",minLength:1},icon:{$content:{editor:{input:"icon"}},type:"string"},size:{type:"string",enum:["xs","sm","md","lg","xl"]},trailing:{type:"boolean"},target:{type:"string"},color:{type:"string",enum:["primary","secondary","tertiary","rodeodust","poison","signal","info","success","warning","error","kalkmark","vanligmark","time","neutral"]},variant:{type:"string",enum:["solid","outline","subtle","soft","ghost","link"]}},required:["label","to"],additionalProperties:!1}},reverse:{type:"boolean"}},required:["title","description","id","src","links"],additionalProperties:!1}},press:{type:"object",properties:{title:{type:"string",minLength:1},description:{type:"string",minLength:1},items:{type:"array",items:{type:"object",properties:{title:{type:"string",minLength:1},publication:{type:"string"},publicationDate:{type:"string"},description:{type:"string"},icon:{type:"string"},url:{type:"string",minLength:1},badge:{type:"object",properties:{label:{type:"string",minLength:1},color:{type:"string",enum:["primary","secondary","tertiary","rodeodust","poison","signal","info","success","warning","error","kalkmark","vanligmark","time","neutral"]}},required:["label"],additionalProperties:!1}},required:["title","url"],additionalProperties:!1}}},required:["title","description","items"],additionalProperties:!1},timeline:{type:"object",properties:{title:{type:"string",minLength:1},description:{type:"string",minLength:1},items:{type:"array",items:{type:"object",properties:{date:{type:"string",minLength:1},title:{type:"string",minLength:1},description:{type:"string",minLength:1},icon:{$content:{editor:{input:"icon"}},type:"string"}},required:["date","title","description"],additionalProperties:!1}}},required:["title","description","items"],additionalProperties:!1},financing:{type:"object",properties:{headline:{type:"string",minLength:1},logos:{type:"array",items:{type:"object",properties:{src:{type:"string",minLength:1},alt:{type:"string"},height:{type:"number"},width:{type:"number"}},required:["src"],additionalProperties:!1}},notes:{type:"array",items:{type:"string"}}},required:["headline","logos","notes"],additionalProperties:!1}},required:["id","stem","extension","meta","path","title","description","body","hero","sections"],additionalProperties:!1}}},tableDefinition:`CREATE TABLE IF NOT EXISTS _content_index (id TEXT PRIMARY KEY, "title" VARCHAR, "body" TEXT, "description" VARCHAR, "extension" VARCHAR, "financing" TEXT NULL, "hero" TEXT, "meta" TEXT, "navigation" TEXT DEFAULT true, "path" VARCHAR, "press" TEXT NULL, "sections" TEXT, "seo" TEXT DEFAULT '{}', "stem" VARCHAR, "timeline" TEXT NULL, "__hash__" TEXT UNIQUE);`},mykorrhizasvampar:{name:"mykorrhizasvampar",pascalName:"Mykorrhizasvampar",tableName:"_content_mykorrhizasvampar",source:[{_resolved:!0,prefix:"/",include:"1.mykorrhizasvampar.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"page",fields:{id:"string",title:"string",body:"json",carousel:"json",description:"string",extension:"string",gallery:"json",hero:"json",meta:"json",navigation:"json",path:"string",seo:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{mykorrhizasvampar:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},path:{type:"string"},title:{type:"string",minLength:1},description:{type:"string",minLength:1},seo:{allOf:[{type:"object",properties:{title:{type:"string"},description:{type:"string"}}},{type:"object",additionalProperties:{}}],default:{}},body:{type:"object",properties:{type:{type:"string"},children:{},toc:{}},required:["type"],additionalProperties:!1},navigation:{anyOf:[{type:"boolean"},{type:"object",properties:{title:{type:"string"},description:{type:"string"},icon:{type:"string",$content:{editor:{input:"icon"}}}},required:["title","description","icon"],additionalProperties:!1}],default:!0},hero:{type:"object",properties:{headline:{type:"object",properties:{label:{type:"string"},to:{type:"string"},icon:{$content:{editor:{input:"icon"}},type:"string"},color:{type:"string",enum:["primary","secondary","tertiary","rodeodust","poison","signal","info","success","warning","error","kalkmark","vanligmark","time","neutral"]}},additionalProperties:!1},title:{type:"string",minLength:1},description:{type:"string",minLength:1},links:{type:"array",items:{type:"object",properties:{label:{type:"string",minLength:1},to:{type:"string",minLength:1},icon:{$content:{editor:{input:"icon"}},type:"string"},size:{type:"string",enum:["xs","sm","md","lg","xl"]},trailing:{type:"boolean"},target:{type:"string"},color:{type:"string",enum:["primary","secondary","tertiary","rodeodust","poison","signal","info","success","warning","error","kalkmark","vanligmark","time","neutral"]},variant:{type:"string",enum:["solid","outline","subtle","soft","ghost","link"]}},required:["label","to"],additionalProperties:!1}},src:{type:"string",minLength:1},orientation:{type:"string",enum:["vertical","horizontal"]}},required:["headline","title","description","links","src"],additionalProperties:!1},carousel:{type:"object",properties:{title:{type:"string"},description:{type:"string"},items:{type:"array",items:{type:"object",properties:{title:{type:"string",minLength:1},description:{type:"string",minLength:1},img:{type:"string"},specialBento:{type:"boolean"},bentoImgs:{type:"array",items:{type:"string"}},specialGrid:{type:"boolean"},gridTop:{type:"string"},gridRest:{type:"string"},gridCols:{type:"number"},gridRows:{type:"number"},noBorder:{type:"boolean"}},required:["title","description"],additionalProperties:!1}}},required:["items"],additionalProperties:!1},gallery:{type:"object",properties:{title:{type:"string",minLength:1},description:{type:"string"},items:{type:"array",items:{type:"object",properties:{title:{type:"string",minLength:1},image:{type:"string",minLength:1},description:{type:"string"}},required:["title","image"],additionalProperties:!1}}},required:["title","items"],additionalProperties:!1}},required:["id","stem","extension","meta","path","title","description","body","hero"],additionalProperties:!1}}},tableDefinition:`CREATE TABLE IF NOT EXISTS _content_mykorrhizasvampar (id TEXT PRIMARY KEY, "title" VARCHAR, "body" TEXT, "carousel" TEXT NULL, "description" VARCHAR, "extension" VARCHAR, "gallery" TEXT NULL, "hero" TEXT, "meta" TEXT, "navigation" TEXT DEFAULT true, "path" VARCHAR, "seo" TEXT DEFAULT '{}', "stem" VARCHAR, "__hash__" TEXT UNIQUE);`},svamparSkogsbruk:{name:"svamparSkogsbruk",pascalName:"SvamparSkogsbruk",tableName:"_content_svamparSkogsbruk",source:[{_resolved:!0,prefix:"/",include:"forestry/svampar-skogsbruk.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",entries:"json",extension:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{svamparSkogsbruk:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},entries:{type:"array",items:{type:"object",properties:{artkategori:{type:"string",minLength:1},frameworks:{type:"string",minLength:1},startskog:{type:"string"},ålder:{type:"number"},klassning:{type:"number"}},required:["artkategori","frameworks","ålder","klassning"],additionalProperties:!1}}},required:["id","stem","extension","meta","entries"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_svamparSkogsbruk (id TEXT PRIMARY KEY, "entries" TEXT, "extension" VARCHAR, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},matsvampSkogsbruk:{name:"matsvampSkogsbruk",pascalName:"MatsvampSkogsbruk",tableName:"_content_matsvampSkogsbruk",source:[{_resolved:!0,prefix:"/",include:"forestry/matsvamp-skogsbruk.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",entries:"json",extension:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{matsvampSkogsbruk:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},entries:{type:"array",items:{type:"object",properties:{artkategori:{type:"string",minLength:1},frameworks:{type:"string",minLength:1},startskog:{type:"string"},ålder:{type:"number"},klassning:{type:"number"}},required:["artkategori","frameworks","ålder","klassning"],additionalProperties:!1}}},required:["id","stem","extension","meta","entries"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_matsvampSkogsbruk (id TEXT PRIMARY KEY, "entries" TEXT, "extension" VARCHAR, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},godaMatsvamparSkogsbruk:{name:"godaMatsvamparSkogsbruk",pascalName:"GodaMatsvamparSkogsbruk",tableName:"_content_godaMatsvamparSkogsbruk",source:[{_resolved:!0,prefix:"/",include:"forestry/goda-matsvampar-skogsbruk.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",entries:"json",extension:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{godaMatsvamparSkogsbruk:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},entries:{type:"array",items:{type:"object",properties:{artkategori:{type:"string",minLength:1},frameworks:{type:"string",minLength:1},startskog:{type:"string"},ålder:{type:"number"},klassning:{type:"number"}},required:["artkategori","frameworks","ålder","klassning"],additionalProperties:!1}}},required:["id","stem","extension","meta","entries"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_godaMatsvamparSkogsbruk (id TEXT PRIMARY KEY, "entries" TEXT, "extension" VARCHAR, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},signalRodlistadeSkogsbruk:{name:"signalRodlistadeSkogsbruk",pascalName:"SignalRodlistadeSkogsbruk",tableName:"_content_signalRodlistadeSkogsbruk",source:[{_resolved:!0,prefix:"/",include:"forestry/signal-rodlistade-skogsbruk.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",entries:"json",extension:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{signalRodlistadeSkogsbruk:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},entries:{type:"array",items:{type:"object",properties:{artkategori:{type:"string",minLength:1},frameworks:{type:"string",minLength:1},startskog:{type:"string"},ålder:{type:"number"},klassning:{type:"number"}},required:["artkategori","frameworks","ålder","klassning"],additionalProperties:!1}}},required:["id","stem","extension","meta","entries"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_signalRodlistadeSkogsbruk (id TEXT PRIMARY KEY, "entries" TEXT, "extension" VARCHAR, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},athelialesSkogsbruk:{name:"athelialesSkogsbruk",pascalName:"AthelialesSkogsbruk",tableName:"_content_athelialesSkogsbruk",source:[{_resolved:!0,prefix:"/",include:"forestry/atheliales-skogsbruk.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",entries:"json",extension:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{athelialesSkogsbruk:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},entries:{type:"array",items:{type:"object",properties:{artkategori:{type:"string",minLength:1},frameworks:{type:"string",minLength:1},startskog:{type:"string"},ålder:{type:"number"},klassning:{type:"number"}},required:["artkategori","frameworks","ålder","klassning"],additionalProperties:!1}}},required:["id","stem","extension","meta","entries"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_athelialesSkogsbruk (id TEXT PRIMARY KEY, "entries" TEXT, "extension" VARCHAR, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},boletalesSkogsbruk:{name:"boletalesSkogsbruk",pascalName:"BoletalesSkogsbruk",tableName:"_content_boletalesSkogsbruk",source:[{_resolved:!0,prefix:"/",include:"forestry/boletales-skogsbruk.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",entries:"json",extension:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{boletalesSkogsbruk:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},entries:{type:"array",items:{type:"object",properties:{artkategori:{type:"string",minLength:1},frameworks:{type:"string",minLength:1},startskog:{type:"string"},ålder:{type:"number"},klassning:{type:"number"}},required:["artkategori","frameworks","ålder","klassning"],additionalProperties:!1}}},required:["id","stem","extension","meta","entries"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_boletalesSkogsbruk (id TEXT PRIMARY KEY, "entries" TEXT, "extension" VARCHAR, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},cantharellalesSkogsbruk:{name:"cantharellalesSkogsbruk",pascalName:"CantharellalesSkogsbruk",tableName:"_content_cantharellalesSkogsbruk",source:[{_resolved:!0,prefix:"/",include:"forestry/cantharellales-skogsbruk.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",entries:"json",extension:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{cantharellalesSkogsbruk:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},entries:{type:"array",items:{type:"object",properties:{artkategori:{type:"string",minLength:1},frameworks:{type:"string",minLength:1},startskog:{type:"string"},ålder:{type:"number"},klassning:{type:"number"}},required:["artkategori","frameworks","ålder","klassning"],additionalProperties:!1}}},required:["id","stem","extension","meta","entries"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_cantharellalesSkogsbruk (id TEXT PRIMARY KEY, "entries" TEXT, "extension" VARCHAR, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},spindlingarSkogsbruk:{name:"spindlingarSkogsbruk",pascalName:"SpindlingarSkogsbruk",tableName:"_content_spindlingarSkogsbruk",source:[{_resolved:!0,prefix:"/",include:"forestry/spindlingar-skogsbruk.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",entries:"json",extension:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{spindlingarSkogsbruk:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},entries:{type:"array",items:{type:"object",properties:{artkategori:{type:"string",minLength:1},frameworks:{type:"string",minLength:1},startskog:{type:"string"},ålder:{type:"number"},klassning:{type:"number"}},required:["artkategori","frameworks","ålder","klassning"],additionalProperties:!1}}},required:["id","stem","extension","meta","entries"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_spindlingarSkogsbruk (id TEXT PRIMARY KEY, "entries" TEXT, "extension" VARCHAR, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},russulalesSkogsbruk:{name:"russulalesSkogsbruk",pascalName:"RussulalesSkogsbruk",tableName:"_content_russulalesSkogsbruk",source:[{_resolved:!0,prefix:"/",include:"forestry/russulales-skogsbruk.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",entries:"json",extension:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{russulalesSkogsbruk:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},entries:{type:"array",items:{type:"object",properties:{artkategori:{type:"string",minLength:1},frameworks:{type:"string",minLength:1},startskog:{type:"string"},ålder:{type:"number"},klassning:{type:"number"}},required:["artkategori","frameworks","ålder","klassning"],additionalProperties:!1}}},required:["id","stem","extension","meta","entries"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_russulalesSkogsbruk (id TEXT PRIMARY KEY, "entries" TEXT, "extension" VARCHAR, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},thelephoralesSkogsbruk:{name:"thelephoralesSkogsbruk",pascalName:"ThelephoralesSkogsbruk",tableName:"_content_thelephoralesSkogsbruk",source:[{_resolved:!0,prefix:"/",include:"forestry/thelephorales-skogsbruk.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",entries:"json",extension:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{thelephoralesSkogsbruk:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},entries:{type:"array",items:{type:"object",properties:{artkategori:{type:"string",minLength:1},frameworks:{type:"string",minLength:1},startskog:{type:"string"},ålder:{type:"number"},klassning:{type:"number"}},required:["artkategori","frameworks","ålder","klassning"],additionalProperties:!1}}},required:["id","stem","extension","meta","entries"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_thelephoralesSkogsbruk (id TEXT PRIMARY KEY, "entries" TEXT, "extension" VARCHAR, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},totalSvamparSkogsbruk:{name:"totalSvamparSkogsbruk",pascalName:"TotalSvamparSkogsbruk",tableName:"_content_totalSvamparSkogsbruk",source:[{_resolved:!0,prefix:"/",include:"forestry/total-svampar-skogsbruk.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",entries:"json",extension:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{totalSvamparSkogsbruk:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},entries:{type:"array",items:{type:"object",properties:{artkategori:{type:"string",minLength:1},frameworks:{type:"string",minLength:1},ålder:{type:"number"},klassning:{type:"number"}},required:["artkategori","frameworks","ålder","klassning"],additionalProperties:!1}}},required:["id","stem","extension","meta","entries"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_totalSvamparSkogsbruk (id TEXT PRIMARY KEY, "entries" TEXT, "extension" VARCHAR, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},skogsskotsel:{name:"skogsskotsel",pascalName:"Skogsskotsel",tableName:"_content_skogsskotsel",source:[{_resolved:!0,prefix:"/",include:"2.skogsskotsel.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"page",fields:{id:"string",title:"string",body:"json",carousel:"json",description:"string",extension:"string",hero:"json",meta:"json",methods:"json",navigation:"json",path:"string",seo:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{skogsskotsel:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},path:{type:"string"},title:{type:"string",minLength:1},description:{type:"string",minLength:1},seo:{allOf:[{type:"object",properties:{title:{type:"string"},description:{type:"string"}}},{type:"object",additionalProperties:{}}],default:{}},body:{type:"object",properties:{type:{type:"string"},children:{},toc:{}},required:["type"],additionalProperties:!1},navigation:{anyOf:[{type:"boolean"},{type:"object",properties:{title:{type:"string"},description:{type:"string"},icon:{type:"string",$content:{editor:{input:"icon"}}}},required:["title","description","icon"],additionalProperties:!1}],default:!0},hero:{type:"object",properties:{headline:{type:"object",properties:{label:{type:"string"},to:{type:"string"},icon:{$content:{editor:{input:"icon"}},type:"string"},color:{type:"string",enum:["primary","secondary","tertiary","rodeodust","poison","signal","info","success","warning","error","kalkmark","vanligmark","time","neutral"]}},additionalProperties:!1},title:{type:"string",minLength:1},description:{type:"string",minLength:1},links:{type:"array",items:{type:"object",properties:{label:{type:"string",minLength:1},to:{type:"string",minLength:1},icon:{$content:{editor:{input:"icon"}},type:"string"},size:{type:"string",enum:["xs","sm","md","lg","xl"]},trailing:{type:"boolean"},target:{type:"string"},color:{type:"string",enum:["primary","secondary","tertiary","rodeodust","poison","signal","info","success","warning","error","kalkmark","vanligmark","time","neutral"]},variant:{type:"string",enum:["solid","outline","subtle","soft","ghost","link"]}},required:["label","to"],additionalProperties:!1}},src:{type:"string",minLength:1},orientation:{type:"string",enum:["vertical","horizontal"]}},required:["headline","title","description","links","src"],additionalProperties:!1},carousel:{type:"object",properties:{title:{type:"string"},description:{type:"string"},items:{type:"array",items:{type:"object",properties:{title:{type:"string",minLength:1},description:{type:"string",minLength:1},img:{type:"string"},specialBento:{type:"boolean"},bentoImgs:{type:"array",items:{type:"string"}},specialGrid:{type:"boolean"},gridTop:{type:"string"},gridRest:{type:"string"},gridCols:{type:"number"},gridRows:{type:"number"},noBorder:{type:"boolean"}},required:["title","description"],additionalProperties:!1}}},required:["items"],additionalProperties:!1},methods:{type:"array",items:{type:"object",properties:{index:{type:"number"},id:{type:"string",minLength:1},title:{type:"string",minLength:1},image:{type:"string",minLength:1},shortdescription:{type:"string",minLength:1},description:{type:"string",minLength:1},descriptionsvamp:{type:"string",minLength:1},type:{type:"string"}},required:["id","title","image","shortdescription","description","descriptionsvamp"],additionalProperties:!1}}},required:["id","stem","extension","meta","path","title","description","body","hero"],additionalProperties:!1}}},tableDefinition:`CREATE TABLE IF NOT EXISTS _content_skogsskotsel (id TEXT PRIMARY KEY, "title" VARCHAR, "body" TEXT, "carousel" TEXT NULL, "description" VARCHAR, "extension" VARCHAR, "hero" TEXT, "meta" TEXT, "methods" TEXT NULL, "navigation" TEXT DEFAULT true, "path" VARCHAR, "seo" TEXT DEFAULT '{}', "stem" VARCHAR, "__hash__" TEXT UNIQUE);`},blog:{name:"blog",pascalName:"Blog",tableName:"_content_blog",source:[{_resolved:!0,prefix:"/",include:"3.blog.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",title:"string",description:"string",extension:"string",headline:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{blog:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},headline:{type:"string"},title:{type:"string",minLength:1},description:{type:"string",minLength:1}},required:["id","stem","extension","meta","title","description"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_blog (id TEXT PRIMARY KEY, "title" VARCHAR, "description" VARCHAR, "extension" VARCHAR, "headline" VARCHAR NULL, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},forestryTimelines:{name:"forestryTimelines",pascalName:"ForestryTimelines",tableName:"_content_forestryTimelines",source:[{_resolved:!0,prefix:"/timelines",include:"timelines/**/*.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",entries:"json",extension:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{forestryTimelines:{type:"object",properties:{id:{type:"string",minLength:1},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},entries:{type:"array",items:{type:"object",properties:{startskog:{type:"string",minLength:1},atgard:{type:"string",minLength:1},tid:{type:"string",minLength:1},skog:{type:"string",minLength:1},svamp:{type:"string",minLength:1}},required:["startskog","atgard","tid","skog","svamp"],additionalProperties:!1}}},required:["id","stem","extension","meta","entries"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_forestryTimelines (id TEXT PRIMARY KEY, "entries" TEXT, "extension" VARCHAR, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},overlays:{name:"overlays",pascalName:"Overlays",tableName:"_content_overlays",source:[{_resolved:!0,prefix:"/overlays",include:"overlays/*.yml",cwd:"/home/runner/work/Svampskog/Svampskog/content"}],type:"data",fields:{id:"string",title:"string",entries:"json",extension:"string",meta:"json",stem:"string"},schema:{$schema:"http://json-schema.org/draft-07/schema#",$ref:"#/definitions/__SCHEMA__",definitions:{overlays:{type:"object",properties:{id:{type:"string"},stem:{type:"string"},extension:{type:"string",enum:["md","yaml","yml","json","csv","xml"]},meta:{type:"object",additionalProperties:{}},title:{type:"string"},entries:{type:"array",items:{type:"object",additionalProperties:{}}}},required:["id","stem","extension","meta","entries"],additionalProperties:!1}}},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_overlays (id TEXT PRIMARY KEY, "title" VARCHAR NULL, "entries" TEXT, "extension" VARCHAR, "meta" TEXT, "stem" VARCHAR, "__hash__" TEXT UNIQUE);'},info:{name:"info",pascalName:"Info",tableName:"_content_info",source:[],type:"data",fields:{},schema:{$ref:"#/definitions/info",definitions:{},$schema:"http://json-schema.org/draft-07/schema#"},tableDefinition:'CREATE TABLE IF NOT EXISTS _content_info (id TEXT PRIMARY KEY, "ready" BOOLEAN, "structureVersion" VARCHAR, "version" VARCHAR, "__hash__" TEXT UNIQUE);'}},Q=X(!1),ue=ut(()=>JSON.parse(JSON.stringify(be()))),vi=async i=>{const e=gt(i.files,i.additions,i.deletions),t=e.filter(r=>![x.appConfig,x.appConfigV4,x.nuxtConfig].includes(r.path));for(const r of Object.values(C))await P(r.name).exec(r.tableDefinition);for(const r of t)await wi(C,r);const n=e.find(r=>[x.appConfig,x.appConfigV4].includes(r.path));n&&G(n.parsed),Ye(),Q.value=!0},wi=async(i,e)=>{const{collection:t,matchedSource:n}=q(e.path,i);if(!t||!n){console.warn(`Content Preview: collection not found for file: ${e.path}, skipping insertion.`);return}const r=P(t.name),s=Ae(e,t,n),o=$e(t,s);await r.exec(o)},G=i=>{const e=D(),t=Ke(e,be);ve(t,mt(i||{},ue)),i||_e(t,ue)};function Ci(){const i=ye().public.preview||{},e=window.sessionStorage.getItem("previewToken"),t=document.createElement("div");t.id="__nuxt_preview_wrapper",document.body.appendChild(t),ze(tt,{previewToken:e,api:window.sessionStorage.getItem("previewAPI")||i?.api,initializePreview:vi}).mount(t)}function Li(){const i=D(),e=ye().public.preview;if(!window.parent||window.self===window.parent)return;const t=he(),n=We();window.addEventListener("keydown",s=>{(s.metaKey||s.ctrlKey||s.altKey||s.shiftKey)&&window.parent.postMessage({type:"nuxt-content:preview:keydown",payload:{key:s.key,metaKey:s.metaKey,ctrlKey:s.ctrlKey,shiftKey:s.shiftKey,altKey:s.altKey}},"*")}),window.addEventListener("message",async s=>{if(!Q.value)return;const o=e?.iframeMessagingAllowedOrigins?.split(",").map(d=>d.trim())||[];if(!["http://localhost:3000",..._i,...o].includes(s.origin))return;const{type:a,payload:p={},navigate:l}=s.data||{};switch(a){case"nuxt-content:editor:file-selected":{await c(p.path);break}case"nuxt-content:editor:file-changed":case"nuxt-content:editor:media-changed":{const{additions:d=[],deletions:m=[]}=p;for(const g of d)await h(g,l);for(const g of m)await u(g.path);Ai();break}case"nuxt-content:config:file-changed":{const{additions:d=[],deletions:m=[]}=p,g=d.find(k=>[x.appConfig,x.appConfigV4].includes(k.path));g&&G(g?.parsed),m.find(k=>[x.appConfig,x.appConfigV4].includes(k.path))&&G(void 0)}}async function c(d){if(!d)return;const{collection:m}=q(U(d),C);if(!m){console.warn(`Content Preview: collection not found for file: ${d}, skipping navigation.`);return}if(m.type!=="page")return;const g=P(m.name),f=z(d),k=me(m,"stem",f),E=await g.first(k);if(!E||!E.path)return;const y=t.resolve(E.path);!y||!y.matched||y.matched.length===0||E.path!==n.path&&t.push(E.path)}async function h(d,m){const{collection:g,matchedSource:f}=q(d.path,C);if(!g||!f){console.warn(`Content Preview: collection not found for file: ${d.path}, skipping update.`);return}const k=z(d.path),E=Ae({path:d.path,parsed:d.parsed},g,f),y=Ti(g,k,E);if(await P(g.name).exec(y),g.type!=="page"||!d.pathRoute)return;const S=fe(d.pathRoute);if(m&&S!==n.path){const R=t.resolve(S);if(!R||!R.matched||R.matched.length===0)return;t.push(S)}}async function u(d){const{collection:m}=q(U(d),C);if(!m){console.warn(`Content Preview: collection not found for file: ${d}, skipping deletion.`);return}const g=z(d),f=Me(m,g);await P(m.name).exec(f)}});async function r(){if(!Q.value)return;const s=n.path,{collection:o}=ki(s,C);if(!o||o.type!=="page"){window.sendNavigateMessageInPreview(s,!1);return}const a=P(o.name),p=me(o,"path",s),l=await a.first(p);window.sendNavigateMessageInPreview(s,!!l?.path)}i.hook("page:finish",()=>{r()}),i.hook("nuxt-content:preview:ready",()=>{window.parent.postMessage({type:"nuxt-content:preview:ready"},"*")}),window.sendNavigateMessageInPreview=(s,o)=>{window.parent.postMessage({type:"nuxt-content:preview:navigate",payload:{path:s,navigate:o}},"*")}}async function Ai(){await D().hooks.callHookParallel("app:data:refresh")}export{Li as initIframeCommunication,Ci as mountPreviewUI};
